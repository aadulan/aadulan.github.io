{"version":3,"sources":["images/image-1.jpg","images/image-2.jpg","images/image-3.jpg","images/image-4.jpg","images/image-5.jpg","images/image-6.jpg","images/image-7.jpg","images/image-8.jpg","images/image-9.jpg","images/image-10.jpg","images/image-11.jpg","images/image-12.jpg","logo.svg","data.js","gallery.js","useMedia.js","useMeasure.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","css","concat","Background1","height","Background2","Background3","Background4","Background5","Background6","Background7","Background8","Background9","Background10","Background11","Background12","Gallery","columns","queries","values","defaultValue","match","findIndex","q","matchMedia","matches","_useState","useState","_useState2","Object","slicedToArray","value","set","useEffect","handler","window","addEventListener","removeEventListener","useMedia","_useMeasure","ref","useRef","left","top","width","bounds","_useState3","ResizeObserver","_ref","entry","contentRect","ro","observe","current","disconnect","useMeasure","_useMeasure2","bind","items","setInterval","shuffle","heights","Array","fill","gridItems","map","child","i","column","indexOf","Math","min","apply","toConsumableArray","xy","objectSpread","transitions","useTransition","item","from","opacity","enter","_ref2","update","_ref3","leave","config","mass","tension","friction","trail","react_default","a","createElement","assign","class","style","max","_ref4","_ref4$props","props","rest","objectWithoutProperties","key","web","div","transform","interpolate","x","y","backgroundImage","App","Boolean","location","hostname","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8YCcxBC,EAAA,CAAC,CACbC,IAAG,OAAAC,OACMC,IADN,KAEHC,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIG,IADJ,KAEHD,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACII,IADJ,KAEHF,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIK,IADJ,KAEHH,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIM,IADJ,KAEHJ,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIO,IADJ,KAEHL,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIQ,IADJ,KAEHN,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIS,IADJ,KAEHP,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIU,IADJ,KAEHR,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIW,IADJ,KAEHT,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIY,IADJ,KAEHV,OAAQ,KAEV,CACEH,IAAG,OAAAC,OACIa,IADJ,KAEHX,OAAQ,MC/DG,SAASY,IAEtB,IAAMC,ECTO,SAAkBC,EAASC,EAAQC,GAChD,IAAMC,EAAQ,kBAAMF,EAAOD,EAAQI,UAAU,SAAAC,GAAC,OAAIC,WAAWD,GAAGE,YAAaL,GADfM,EAEzCC,mBAASN,GAFgCO,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEvDK,EAFuDH,EAAA,GAEhDI,EAFgDJ,EAAA,GAQ9D,OALAK,oBAAU,WACR,IAAMC,EAAU,kBAAMF,EAAIX,IAE1B,OADAc,OAAOC,iBAAiB,SAAUF,GAC3B,kBAAMC,OAAOE,oBAAoBH,KACvC,IACIH,EDCSO,CAAS,CAAC,sBAAuB,sBAAuB,sBAAuB,CAAC,EAAG,EAAG,GAAI,GAF1EC,EENnB,WACb,IAAMC,EAAMC,mBADuBf,EAEbC,mBAAS,CAAEe,KAAM,EAAGC,IAAK,EAAGC,MAAO,EAAGxC,OAAQ,IAFjCwB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE5BmB,EAF4BjB,EAAA,GAEpBI,EAFoBJ,EAAA,GAAAkB,EAGtBnB,mBAAS,kBAAM,IAAIoB,IAAe,SAAAC,GAAA,IAAEC,EAAFpB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,aAAahB,EAAIiB,EAAMC,iBAA/DC,EAH4BtB,OAAAC,EAAA,EAAAD,CAAAiB,EAAA,MAKnC,OADAb,oBAAU,kBAAOkB,EAAGC,QAAQZ,EAAIa,SAAUF,EAAGG,YAAa,IACnD,CAAC,CAAEd,OAAOK,GFKSU,GAJMC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAIzBkB,EAJyBD,EAAA,GAIjBZ,EAJiBY,EAAA,GAIjBZ,MAJiBlB,EAMXC,mBAAS3B,GANE4B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMzBgC,EANyB9B,EAAA,GAMlBI,EANkBJ,EAAA,GAQhCK,oBAAU,WAAW0B,YAAY,kBAAM3B,EAAI4B,MAAU,MAAQ,IAE7D,IAAIC,EAAU,IAAIC,MAAM7C,GAAS8C,KAAK,GAClCC,EAAYN,EAAMO,IAAI,SAACC,EAAOC,GAChC,IAAMC,EAASP,EAAQQ,QAAQC,KAAKC,IAALC,MAAAF,KAAIzC,OAAA4C,EAAA,EAAA5C,CAAQgC,KACrCa,EAAK,CAAE9B,EAAQ3B,EAAWmD,GAASP,EAAQO,IAAWF,EAAM9D,OAAS,GAAK8D,EAAM9D,OAAS,GAC/F,OAAOyB,OAAA8C,EAAA,EAAA9C,CAAA,GAAKqC,EAAZ,CAAmBQ,KAAI9B,MAAOA,EAAQ3B,EAASb,OAAQ8D,EAAM9D,OAAS,MAGlEwE,EAAcC,YAAcb,EAAW,SAAAc,GAAI,OAAIA,EAAK7E,KAAK,CAC7D8E,KAAM,SAAA/B,GAAA,MAA4B,CAAE0B,GAA9B1B,EAAG0B,GAA+B9B,MAAlCI,EAAOJ,MAAkCxC,OAAzC4C,EAAc5C,OAAmC4E,QAAS,IAChEC,MAAO,SAAAC,GAAA,MAA4B,CAAER,GAA9BQ,EAAGR,GAA+B9B,MAAlCsC,EAAOtC,MAAkCxC,OAAzC8E,EAAc9E,OAAmC4E,QAAS,IACjEG,OAAQ,SAAAC,GAAA,MAA4B,CAAEV,GAA9BU,EAAGV,GAA+B9B,MAAlCwC,EAAOxC,MAAkCxC,OAAzCgF,EAAchF,SACtBiF,MAAO,CAAEjF,OAAQ,EAAG4E,QAAS,GAC7BM,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,KAC3CC,MAAO,KAGT,OACEC,EAAAC,EAAAC,cAAA,MAAAhE,OAAAiE,OAAA,GAASrC,EAAT,CAAesC,MAAM,OAAOC,MAAO,CAAE5F,OAAQkE,KAAK2B,IAALzB,MAAAF,KAAIzC,OAAA4C,EAAA,EAAA5C,CAAQgC,OACtDe,EAAYX,IAAI,SAAAiC,GAAA,IAAGpB,EAAHoB,EAAGpB,KAAHqB,EAAAD,EAASE,MAAS1B,EAAlByB,EAAkBzB,GAAO2B,EAAzBxE,OAAAyE,EAAA,EAAAzE,CAAAsE,EAAA,QAAiCI,EAAjCL,EAAiCK,IAAjC,OACfZ,EAAAC,EAAAC,cAACW,EAAA,EAAEC,IAAH,CAAOF,IAAKA,EAAKP,MAAKnE,OAAA8C,EAAA,EAAA9C,CAAA,CAAI6E,UAAWhC,EAAGiC,YAAY,SAACC,EAAGC,GAAJ,qBAAA3G,OAAyB0G,EAAzB,OAAA1G,OAAgC2G,EAAhC,YAA8CR,IAChGV,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEc,gBAAiBhC,EAAK7E,WG5B/B8G,MANf,WACE,OACIpB,EAAAC,EAAAC,cAAC7E,EAAD,OCKcgG,QACW,cAA7B7E,OAAO8E,SAASC,UAEe,UAA7B/E,OAAO8E,SAASC,UAEhB/E,OAAO8E,SAASC,SAAS7F,MACvB,2DCZN8F,IAASC,OACPzB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,WAAP,KACE1B,EAAAC,EAAAC,cAACyB,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME","file":"static/js/main.a8ef10af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image-1.506fdc0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-2.a1e40a9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-3.02146f1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-4.96cc7a23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-5.815a55f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-6.f2fffb3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-7.2e29ade3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-8.47d2cc09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-9.a16cbb70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-10.72b959d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-11.4e0b236a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-12.01fb2d7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Background1 from './images/image-1.jpg'\nimport Background2 from './images/image-2.jpg'\nimport Background3 from './images/image-3.jpg'\nimport Background4 from './images/image-4.jpg'\nimport Background5 from './images/image-5.jpg'\nimport Background6 from './images/image-6.jpg'\nimport Background7 from './images/image-7.jpg'\nimport Background8 from './images/image-8.jpg'\nimport Background9 from './images/image-9.jpg'\nimport Background10 from './images/image-10.jpg'\nimport Background11 from './images/image-11.jpg'\nimport Background12 from './images/image-12.jpg'\n\n\nexport default  [{\n    css:\n      `url(${Background1})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background2})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background3})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background4})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background5})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background6})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background7})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background8})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background9})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background10})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background11})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background12})`,\n    height: 300\n  },\n  // {\n  //   css:\n  //     'url(https://images.pexels.com/photos/310452/pexels-photo-310452.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n  //   height: 400\n  // },\n  // {\n  //   css:\n  //     'url(https://images.pexels.com/photos/380337/pexels-photo-380337.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n  //   height: 200\n  // }\n]\n","import { render } from 'react-dom'\nimport React, { useState, useEffect } from 'react'\nimport { useTransition, a } from 'react-spring'\nimport shuffle from 'lodash/shuffle'\nimport useMeasure from './useMeasure'\nimport useMedia from './useMedia'\nimport data from './data'\nimport './styles.css'\n\nexport default function Gallery() {\n  // Hook1: Tie media queries to the number of columns\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2)\n  // Hook2: Measure the width of the container element\n  const [bind, { width }] = useMeasure()\n  // Hook3: Hold items\n  const [items, set] = useState(data)\n  // Hook4: shuffle data every 2 seconds\n  useEffect(() => void setInterval(() => set(shuffle), 10000), [])\n  // Form a grid of stacked items using width & columns we got from hooks 1 & 2\n  let heights = new Array(columns).fill(0) // Each column gets a height starting with zero\n  let gridItems = items.map((child, i) => {\n    const column = heights.indexOf(Math.min(...heights)) // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n    const xy = [(width / columns) * column, (heights[column] += child.height / 2) - child.height / 2] // X = container width / number of columns * column index, Y = it's just the height of the current column\n    return { ...child, xy, width: width / columns, height: child.height / 2 }\n  })\n  // Hook5: Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, item => item.css, {\n    from: ({ xy, width, height }) => ({ xy, width, height, opacity: 0 }),\n    enter: ({ xy, width, height }) => ({ xy, width, height, opacity: 1 }),\n    update: ({ xy, width, height }) => ({ xy, width, height }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 5, tension: 500, friction: 100 },\n    trail: 25\n  })\n  // Render the grid\n  return (\n    <div {...bind} class=\"list\" style={{ height: Math.max(...heights) }}>\n      {transitions.map(({ item, props: { xy, ...rest }, key }) => (\n        <a.div key={key} style={{ transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`), ...rest }}>\n          <div style={{ backgroundImage: item.css }} />\n        </a.div>\n      ))}\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nexport default function useMedia(queries, values, defaultValue) {\n  const match = () => values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue\n  const [value, set] = useState(match)\n  useEffect(() => {\n    const handler = () => set(match)\n    window.addEventListener('resize', handler)\n    return () => window.removeEventListener(handler)\n  }, [])\n  return value\n}\n","import { useRef, useState, useEffect } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport default function useMeasure() {\n  const ref = useRef()\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\n  const [ro] = useState(() => new ResizeObserver(([entry]) => set(entry.contentRect)))\n  useEffect(() => (ro.observe(ref.current), ro.disconnect), [])\n  return [{ ref }, bounds]\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './styles.css';\nimport Gallery from './gallery'\n\nfunction App() {\n  return (\n      <Gallery/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}