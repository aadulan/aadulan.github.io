{"version":3,"sources":["Ash.jsx","utils.jsx","ItemCard.jsx","Section.jsx","ProjectSection.jsx","data.js","gallery.js","useMedia.js","useMeasure.js","App.js","serviceWorker.js","index.js","images/image-1.jpg","images/image-2.jpg","images/image-3.jpg","images/image-4.jpg","images/image-5.jpg","images/image-6.jpg","images/image-7.jpg","images/image-8.jpg","images/image-9.jpg","images/image-10.jpg","images/image-11.jpg","images/image-12.jpg"],"names":["links","href","icon","react_default","a","createElement","GitHub_default","LinkedIn_default","Ash","size","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","_useState","useState","_useState2","Object","slicedToArray","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","heightGreater","Grid","container","direction","justify","alignItems","item","style","paddingRight","Avatar","boxShadow","alt","src","Divider","orientation","flexItem","paddingLeft","Typography","variant","map","e","index","IconButton","key","ItemCard","props","ref","useRef","isHovered","setHovered","_useSpring","useSpring","xys","config","mass","tension","friction","precision","_useSpring2","animatedProps","setAnimatedProps","web","div","className","onMouseEnter","onMouseMove","_ref","clientX","clientY","x","current","offsetLeft","scrollX","pageXOffset","document","body","scrollLeft","offsetTop","scrollY","pageYOffset","scrollTop","clientHeight","clientWidth","onMouseLeave","zIndex","transform","interpolate","y","s","concat","display","justifyContent","CardMedia","backgroundSize","borderLeft","component","image","CardContent","gutterBottom","title","color","text","education","EducationSection","align","textDecoration","src_ItemCard","experience","ProjectSection","padding","data","css","Background1","Background2","Background3","Background4","Background5","Background6","Background7","Background8","Background9","Background10","Background11","Background12","Gallery","columns","queries","values","defaultValue","match","findIndex","q","matchMedia","matches","value","set","handler","useMedia","_useMeasure","left","top","bounds","_useState3","ResizeObserver","entry","contentRect","ro","observe","disconnect","useMeasure","_useMeasure2","bind","items","setInterval","shuffle","heights","Array","fill","gridItems","child","i","column","indexOf","Math","min","apply","toConsumableArray","xy","objectSpread","transitions","useTransition","from","opacity","enter","_ref2","update","_ref3","leave","trail","assign","class","max","_ref4","_ref4$props","rest","objectWithoutProperties","backgroundImage","App","paddingBottom","backgroundColor","xs","Boolean","location","hostname","ReactDOM","render","StrictMode","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports","__webpack_require__","p"],"mappings":"0OAOA,IAAMA,EAAQ,CAAE,CACZC,KAAM,8BACNC,KAAMC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,OAEV,CACIH,KAAM,uCACNC,KAAMC,EAAAC,EAAAC,cAACE,EAAAH,EAAD,QAKK,SAASI,IAEpB,IAAIC,EChBA,WACN,IAAMC,EAA6B,kBAAXC,OAExB,SAASC,IACP,MAAO,CACLC,MAAOH,EAAWC,OAAOG,gBAAaC,EACtCC,OAAQN,EAAWC,OAAOM,iBAAcF,GANb,IAAAG,EAUKC,mBAASP,GAVdQ,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAUxBK,EAVwBH,EAAA,GAUZI,EAVYJ,EAAA,GAyB/B,OAbAK,oBAAU,WACR,IAAKf,EACH,OAAO,EAGT,SAASgB,IACPF,EAAcZ,KAIhB,OADAD,OAAOgB,iBAAiB,SAAUD,GAC3B,kBAAMf,OAAOiB,oBAAoB,SAAUF,KACjD,IAEIH,EDTMM,GACPC,EAAgBrB,EAAKO,OAASP,EAAKI,MAEvC,OACIV,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UACxDhC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMK,MAAI,EAACC,MAAO,CAAEC,aAAcR,EAAgB,GAAK,KACnD3B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACIC,UAAW,EACXC,IAAI,MACJC,IAAI,kBACJL,MAAO,CAAExB,MAAO,IAAKG,OAAQ,QAGrCb,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC1C,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIK,MAAI,EACJC,MAAO,CAAES,YAAahB,EAAgB,GAAK,KAE3C3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASE,MAAI,GAEjCjC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYC,QAASlB,EAAgB,KAAO,MAA5C,iBAEJ3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASE,MAAI,GACjCjC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,SAApB,yBAEJ7C,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,UAEVnC,EAAMiD,IAAI,SAACC,EAAGC,GAAJ,OACPhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,IAAKF,EACL1C,KAAK,QACLR,KAAMiD,EAAEjD,MAEPiD,EAAEhD,yCEwChBoD,MA5Ff,SAAkBC,GAGd,IAAMC,EAAMC,mBAHSvC,EAOWC,oBAAS,GAPpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAOdwC,EAPctC,EAAA,GAOHuC,EAPGvC,EAAA,GAAAwC,EASqBC,YAAU,WAClD,MAAO,CAKLC,IAAK,CAAC,EAAG,EAAG,GAEZC,OAAQ,CAAEC,KAAM,GAAIC,QAAS,IAAKC,SAAU,GAAIC,UAAW,SAjB1CC,EAAA/C,OAAAC,EAAA,EAAAD,CAAAuC,EAAA,GASdS,EATcD,EAAA,GASCE,EATDF,EAAA,GAsBrB,OACEjE,EAAAC,EAAAC,cAACkE,EAAA,EAASC,IAAV,CACEhB,IAAKA,EACLiB,UAAU,OACVC,aAAc,kBAAMf,GAAW,IAC/BgB,YAAa,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,QAEjBC,EACJF,GACCrB,EAAIwB,QAAQC,YACVtE,OAAOuE,SAAWvE,OAAOwE,aAAeC,SAASC,KAAKC,aAUrDxB,EAAM,GANVgB,GACCtB,EAAIwB,QAAQO,WACV5E,OAAO6E,SAAW7E,OAAO8E,aAAeL,SAASC,KAAKK,YAKnDlC,EAAIwB,QAAQW,aAAe,GAFpB,IAGZZ,EAAIvB,EAAIwB,QAAQY,YAAc,GAHlB,GAIb,MAIFtB,EAAiB,CAAER,IAAKA,KAE1B+B,aAAc,WACZlC,GAAW,GAEXW,EAAiB,CAAER,IAAK,CAAC,EAAG,EAAG,MAEjCzB,MAAO,CAELyD,OAAQpC,EAAY,EAAI,EAExBqC,UAAW1B,EAAcP,IAAIkC,YAC3B,SAACjB,EAAGkB,EAAGC,GAAP,oCAAAC,OACgCpB,EADhC,iBAAAoB,OACiDF,EADjD,eAAAE,OACgED,EADhE,OAGFE,QAAS,OACTjE,WAAY,SACZkE,eAAgB,WAKlBlG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACAjE,MAAO,CAAExB,MAAM,MAAQ0F,eAAe,UAAWC,WAAW,GAC1DC,UAAU,MAEVC,MAAOnD,EAAMmD,QAGfvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KACExG,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAY6D,cAAY,EAAC5D,QAAQ,SAC9BO,EAAMsD,OAET1G,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,QAAQ8D,MAAM,gBAAgBL,UAAU,KACzDlD,EAAMwD,SCpFbC,EAAY,CAAC,CACfN,MAAO,UACPG,MAAO,8BACPE,KAAM,qDAEV,CACIL,MAAO,UACPG,MAAO,yBACPE,KAAM,2GAIK,SAASE,EAAiB1D,GACrC,OACIpD,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMK,MAAI,GAGNjC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYmE,MAAM,SAASlE,QAAQ,KAAKX,MAAO,CAAE8E,eAAe,cAAhE,aAGCH,EAAU/D,IAAI,SAACC,EAAGC,GAAJ,OACXhD,EAAAC,EAAAC,cAAC+G,EAAD,CACA/D,IAAKF,EACLuD,MAAOxD,EAAEwD,MACTG,MAAO3D,EAAE2D,MACTE,KAAM7D,EAAE6D,UCzBxB,IAAMM,EAAa,CAAC,CAChBX,MAAO,WACPG,MAAO,UACPE,KAAM,2FAEV,CACIL,MAAO,WACPG,MAAO,gCACPE,KAAM,wGAIK,SAASO,EAAe/D,GACnC,OACIpD,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMK,MAAI,EACVC,MAAO,CAAEkF,QAAS,KAEdpH,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAYmE,MAAM,SAASlE,QAAQ,KAAKX,MAAO,CAAE8E,eAAe,cAAhE,YAGCE,EAAWpE,IAAI,SAACC,EAAGC,GAAJ,OACZhD,EAAAC,EAAAC,cAAC+G,EAAD,CACA/D,IAAKF,EACLuD,MAAOxD,EAAEwD,MACTG,MAAO3D,EAAE2D,MACTE,KAAM7D,EAAE6D,mRCfRS,GAAA,CAAC,CACbC,IAAG,OAAAtB,OACMuB,IADN,KAEH1G,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACIwB,IADJ,KAEH3G,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACIyB,IADJ,KAEH5G,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACI0B,IADJ,KAEH7G,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACI2B,IADJ,KAEH9G,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACI4B,IADJ,KAEH/G,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACI6B,IADJ,KAEHhH,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACI8B,IADJ,KAEHjH,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACI+B,IADJ,KAEHlH,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACIgC,IADJ,KAEHnH,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACIiC,KADJ,KAEHpH,OAAQ,KAEV,CACEyG,IAAG,OAAAtB,OACIkC,KADJ,KAEHrH,OAAQ,MC/DG,SAASsH,KAEtB,IAAMC,ECTO,SAAkBC,EAASC,EAAQC,GAChD,IAAMC,EAAQ,kBAAMF,EAAOD,EAAQI,UAAU,SAAAC,GAAC,OAAIC,WAAWD,GAAGE,YAAaL,GADfxH,EAEzCC,mBAASwH,GAFgCvH,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEvD8H,EAFuD5H,EAAA,GAEhD6H,EAFgD7H,EAAA,GAQ9D,OALAK,oBAAU,WACR,IAAMyH,EAAU,kBAAMD,EAAIN,IAE1B,OADAhI,OAAOgB,iBAAiB,SAAUuH,GAC3B,kBAAMvI,OAAOiB,oBAAoBsH,KACvC,IACIF,EDCSG,CAAS,CAAC,sBAAuB,sBAAuB,sBAAuB,CAAC,EAAG,EAAG,GAAI,GAF1EC,EENnB,WACb,IAAM5F,EAAMC,mBADuBvC,EAEbC,mBAAS,CAAEkI,KAAM,EAAGC,IAAK,EAAGzI,MAAO,EAAGG,OAAQ,IAFjCI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE5BqI,EAF4BnI,EAAA,GAEpB6H,EAFoB7H,EAAA,GAAAoI,EAGtBrI,mBAAS,kBAAM,IAAIsI,IAAe,SAAA7E,GAAA,IAAE8E,EAAFrI,OAAAC,EAAA,EAAAD,CAAAuD,EAAA,aAAaqE,EAAIS,EAAMC,iBAA/DC,EAH4BvI,OAAAC,EAAA,EAAAD,CAAAmI,EAAA,MAKnC,OADA/H,oBAAU,kBAAOmI,EAAGC,QAAQrG,EAAIwB,SAAU4E,EAAGE,YAAa,IACnD,CAAC,CAAEtG,OAAO+F,GFKSQ,GAJMC,EAAA3I,OAAAC,EAAA,EAAAD,CAAA+H,EAAA,GAIzBa,EAJyBD,EAAA,GAIjBnJ,EAJiBmJ,EAAA,GAIjBnJ,MAJiBK,EAMXC,mBAASqG,IANEpG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMzBgJ,EANyB9I,EAAA,GAMlB6H,EANkB7H,EAAA,GAQhCK,oBAAU,WAAW0I,YAAY,kBAAMlB,EAAImB,MAAU,MAAQ,IAE7D,IAAIC,EAAU,IAAIC,MAAM/B,GAASgC,KAAK,GAClCC,EAAYN,EAAMjH,IAAI,SAACwH,EAAOC,GAChC,IAAMC,EAASN,EAAQO,QAAQC,KAAKC,IAALC,MAAAF,KAAIxJ,OAAA2J,EAAA,EAAA3J,CAAQgJ,KACrCY,EAAK,CAAEpK,EAAQ0H,EAAWoC,GAASN,EAAQM,IAAWF,EAAMzJ,OAAS,GAAKyJ,EAAMzJ,OAAS,GAC/F,OAAOK,OAAA6J,EAAA,EAAA7J,CAAA,GAAKoJ,EAAZ,CAAmBQ,KAAIpK,MAAOA,EAAQ0H,EAASvH,OAAQyJ,EAAMzJ,OAAS,MAGlEmK,EAAcC,YAAcZ,EAAW,SAAApI,GAAI,OAAIA,EAAKqF,KAAK,CAC7D4D,KAAM,SAAAzG,GAAA,MAA4B,CAAEqG,GAA9BrG,EAAGqG,GAA+BpK,MAAlC+D,EAAO/D,MAAkCG,OAAzC4D,EAAc5D,OAAmCsK,QAAS,IAChEC,MAAO,SAAAC,GAAA,MAA4B,CAAEP,GAA9BO,EAAGP,GAA+BpK,MAAlC2K,EAAO3K,MAAkCG,OAAzCwK,EAAcxK,OAAmCsK,QAAS,IACjEG,OAAQ,SAAAC,GAAA,MAA4B,CAAET,GAA9BS,EAAGT,GAA+BpK,MAAlC6K,EAAO7K,MAAkCG,OAAzC0K,EAAc1K,SACtB2K,MAAO,CAAE3K,OAAQ,EAAGsK,QAAS,GAC7BvH,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,KAC3C0H,MAAO,KAGT,OACEzL,EAAAC,EAAAC,cAAA,MAAAgB,OAAAwK,OAAA,GAAS5B,EAAT,CAAe6B,MAAM,OAAOzJ,MAAO,CAAErB,OAAQ6J,KAAKkB,IAALhB,MAAAF,KAAIxJ,OAAA2J,EAAA,EAAA3J,CAAQgJ,OACtDc,EAAYlI,IAAI,SAAA+I,GAAA,IAAG5J,EAAH4J,EAAG5J,KAAH6J,EAAAD,EAASzI,MAAS0H,EAAlBgB,EAAkBhB,GAAOiB,EAAzB7K,OAAA8K,EAAA,EAAA9K,CAAA4K,EAAA,QAAiC5I,EAAjC2I,EAAiC3I,IAAjC,OACflD,EAAAC,EAAAC,cAACkE,EAAA,EAAEC,IAAH,CAAOnB,IAAKA,EAAKhB,MAAKhB,OAAA6J,EAAA,EAAA7J,CAAA,CAAI0E,UAAWkF,EAAGjF,YAAY,SAACjB,EAAGkB,GAAJ,qBAAAE,OAAyBpB,EAAzB,OAAAoB,OAAgCF,EAAhC,YAA8CiG,IAChG/L,EAAAC,EAAAC,cAAA,OAAKgC,MAAO,CAAE+J,gBAAiBhK,EAAKqF,WGZ/B4E,OAlBf,WACE,OACElM,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASC,WAAW,aAAaF,UAAU,OACjE9B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMK,MAAI,EAACC,MAAO,CAAEiK,cAAc,KAChCnM,EAAAC,EAAAC,cAACG,EAAD,OAEFL,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAASC,MAAI,EAACC,MAAO,CAACkK,gBAAiB,WAAYC,GAAI,IAC/GrM,EAAAC,EAAAC,cAAC4G,EAAD,MACF9G,EAAAC,EAAAC,cAACiH,EAAD,OAEFnH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMK,MAAI,GACRjC,EAAAC,EAAAC,cAACiI,GAAD,SCRYmE,QACW,cAA7B9L,OAAO+L,SAASC,UAEe,UAA7BhM,OAAO+L,SAASC,UAEhBhM,OAAO+L,SAASC,SAAShE,MACvB,2DCZNiE,IAASC,OACP1M,EAAAC,EAAAC,cAACF,EAAAC,EAAM0M,WAAP,KACE3M,EAAAC,EAAAC,cAAC0M,GAAD,OAEF3H,SAAS4H,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,oDEzI5BC,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.7f2be870.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid, Avatar, Typography, IconButton, Divider } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { useWindowSize } from './utils'\n\n\nconst links = [ {\n    href: \"https://github.com/aadulan/\",\n    icon: <GitHubIcon />\n},\n{\n    href: \"https://www.linkedin.com/in/aadulan/\",\n    icon: <LinkedInIcon />\n}\n\n]\n\nexport default function Ash() {\n\n    var size = useWindowSize()\n    var heightGreater = size.height > size.width\n\n    return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item style={{ paddingRight: heightGreater ? 15 : 20 }}>\n                <Avatar\n                    boxShadow={3}\n                    alt=\"ash\"\n                    src=\"slack-photo.jpg\"\n                    style={{ width: 150, height: 150 }}\n                />\n            </Grid>\n            <Divider orientation=\"vertical\" flexItem />\n            <Grid\n                item\n                style={{ paddingLeft: heightGreater ? 15 : 20 }}\n            >\n                <Grid container justify=\"center\" item>\n\n                    <Typography variant={heightGreater ? \"h6\" : \"h4\"} >Asmita Dulan</Typography>\n                </Grid>\n                <Grid container justify=\"center\" item>\n                    <Typography variant=\"body2\" >Front-End Developer </Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    {links.map((e, index) => (\n                        <IconButton\n                            key={index}\n                            size=\"small\"\n                            href={e.href}\n                        >\n                            {e.icon}\n\n                        </IconButton>\n                    ))}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","import { useState, useEffect } from 'react';\n\n// Hook\n//https://usehooks.com/useWindowSize/\nexport  function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    \n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}","import React, { useState, useRef } from \"react\";\nimport { useSpring, animated } from 'react-spring'\nimport { CardMedia, CardContent, Typography } from '@material-ui/core/';\nimport './styles.css'\n\nfunction ItemCard(props) {\n    // We add this ref to card element and use in onMouseMove event ...\n    // ... to get element's offset and dimensions.\n    const ref = useRef();\n  \n    // Keep track of whether card is hovered so we can increment ...\n    // ... zIndex to ensure it shows up above other cards when animation causes overlap.\n    const [isHovered, setHovered] = useState(false);\n    // const isString = typeof props.number === 'string';\n    const [animatedProps, setAnimatedProps] = useSpring(() => {\n      return {\n        // Array containing [rotateX, rotateY, and scale] values.\n        // We store under a single key (xys) instead of separate keys ...\n        // ... so that we can use animatedProps.xys.interpolate() to ...\n        // ... easily generate the css transform value below.\n        xys: [0, 0, 1],\n        // Setup physics\n        config: { mass: 10, tension: 400, friction: 40, precision: 0.00001 }\n      };\n    });\n\n  \n    return (\n      <animated.div\n        ref={ref}\n        className=\"card\"\n        onMouseEnter={() => setHovered(true)}\n        onMouseMove={({ clientX, clientY }) => {\n          // Get mouse x position within card\n          const x =\n            clientX -\n            (ref.current.offsetLeft -\n              (window.scrollX || window.pageXOffset || document.body.scrollLeft));\n  \n          // Get mouse y position within card\n          const y =\n            clientY -\n            (ref.current.offsetTop -\n              (window.scrollY || window.pageYOffset || document.body.scrollTop));\n  \n          // Set animated values based on mouse position and card dimensions\n          const dampen = 25; // Lower the number the less rotation\n          const xys = [\n            -(y - ref.current.clientHeight / 2) / dampen, // rotateX\n            (x - ref.current.clientWidth / 2) / dampen, // rotateY\n            1.07 // Scale\n          ];\n  \n          // Update values to animate to\n          setAnimatedProps({ xys: xys });\n        }}\n        onMouseLeave={() => {\n          setHovered(false);\n          // Set xys back to original\n          setAnimatedProps({ xys: [0, 0, 1] });\n        }}\n        style={{\n          // If hovered we want it to overlap other cards when it scales up\n          zIndex: isHovered ? 2 : 1,\n          // Interpolate function to handle css changes\n          transform: animatedProps.xys.interpolate(\n            (x, y, s) =>\n              `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n          ),\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n    {/* <Card> */}\n\n        <CardMedia\n        style={{ width:'4em' , backgroundSize:\"contain\", borderLeft:5}}\n          component=\"img\"\n        //   alt=\"Contemplative Reptile\"\n          image={props.image}\n          \n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"body1\">\n            {props.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.text}\n          </Typography>\n        </CardContent>\n    {/* </Card> */}\n      </animated.div>\n    );\n  }\n  \n\nexport default ItemCard;","import React from 'react'\nimport { Grid, Typography } from \"@material-ui/core\";\nimport ItemCard from './ItemCard'\n\nconst education = [{\n    image: 'uoe.png',\n    title: 'The University of Edinburgh',\n    text: 'BSc with Honours Computer Science and Mathematics'\n},\n{\n    image: 'cha.png',\n    title: 'Chadwell Heath Acadmey',\n    text: 'A Levels in Mathematics, Economics and Further Mathematics & 9 GCSEs including English and Mathematics'\n},\n]\n\nexport default function EducationSection(props){\n    return(\n        <Grid item\n        // style={{ backgroundColor: '#cfd8dc', padding: 20}}\n        >\n            <Typography align=\"center\" variant=\"h4\" style={{ textDecoration:\"underline\"}}>\n                Education\n            </Typography>\n            {education.map((e, index) => (\n                <ItemCard\n                key={index}\n                image={e.image}\n                title={e.title}\n                text={e.text}\n                />\n            ))}\n            \n        </Grid>\n    )\n\n}","import React from 'react'\nimport { Grid, Typography } from \"@material-ui/core\";\nimport ItemCard from './ItemCard'\n\nconst experience = [{\n    image: 'logo.png',\n    title: 'Solve X',\n    text: 'An Equation Solving Application designed for Secondary School Teachers and their Pupils'\n},\n{\n    image: 'FEED.png',\n    title: 'FE.ED - System Design Project',\n    text: 'Created the front-end of the web application using React.js to control a smart automatic pet feeder'\n},\n]\n\nexport default function ProjectSection(props){\n    return(\n        <Grid item\n        style={{ padding: 20}}\n        >\n            <Typography align=\"center\" variant=\"h4\" style={{ textDecoration:\"underline\"}}>\n                Projects\n            </Typography>\n            {experience.map((e, index) => (\n                <ItemCard\n                key={index}\n                image={e.image}\n                title={e.title}\n                text={e.text}\n                />\n            ))}   \n        </Grid>\n    )\n\n}","import Background1 from './images/image-1.jpg'\nimport Background2 from './images/image-2.jpg'\nimport Background3 from './images/image-3.jpg'\nimport Background4 from './images/image-4.jpg'\nimport Background5 from './images/image-5.jpg'\nimport Background6 from './images/image-6.jpg'\nimport Background7 from './images/image-7.jpg'\nimport Background8 from './images/image-8.jpg'\nimport Background9 from './images/image-9.jpg'\nimport Background10 from './images/image-10.jpg'\nimport Background11 from './images/image-11.jpg'\nimport Background12 from './images/image-12.jpg'\n\n\nexport default  [{\n    css:\n      `url(${Background1})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background2})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background3})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background4})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background5})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background6})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background7})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background8})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background9})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background10})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background11})`,\n    height: 300\n  },\n  {\n    css:\n    `url(${Background12})`,\n    height: 300\n  },\n  // {\n  //   css:\n  //     'url(https://images.pexels.com/photos/310452/pexels-photo-310452.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n  //   height: 400\n  // },\n  // {\n  //   css:\n  //     'url(https://images.pexels.com/photos/380337/pexels-photo-380337.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)',\n  //   height: 200\n  // }\n]\n","import { render } from 'react-dom'\nimport React, { useState, useEffect } from 'react'\nimport { useTransition, a } from 'react-spring'\nimport shuffle from 'lodash/shuffle'\nimport useMeasure from './useMeasure'\nimport useMedia from './useMedia'\nimport data from './data'\nimport './styles.css'\n\nexport default function Gallery() {\n  // Hook1: Tie media queries to the number of columns\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2)\n  // Hook2: Measure the width of the container element\n  const [bind, { width }] = useMeasure()\n  // Hook3: Hold items\n  const [items, set] = useState(data)\n  // Hook4: shuffle data every 2 seconds\n  useEffect(() => void setInterval(() => set(shuffle), 10000), [])\n  // Form a grid of stacked items using width & columns we got from hooks 1 & 2\n  let heights = new Array(columns).fill(0) // Each column gets a height starting with zero\n  let gridItems = items.map((child, i) => {\n    const column = heights.indexOf(Math.min(...heights)) // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n    const xy = [(width / columns) * column, (heights[column] += child.height / 2) - child.height / 2] // X = container width / number of columns * column index, Y = it's just the height of the current column\n    return { ...child, xy, width: width / columns, height: child.height / 2 }\n  })\n  // Hook5: Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, item => item.css, {\n    from: ({ xy, width, height }) => ({ xy, width, height, opacity: 0 }),\n    enter: ({ xy, width, height }) => ({ xy, width, height, opacity: 1 }),\n    update: ({ xy, width, height }) => ({ xy, width, height }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 5, tension: 500, friction: 100 },\n    trail: 25\n  })\n  // Render the grid\n  return (\n    <div {...bind} class=\"list\" style={{ height: Math.max(...heights) }}>\n      {transitions.map(({ item, props: { xy, ...rest }, key }) => (\n        <a.div key={key} style={{ transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`), ...rest }}>\n          <div style={{ backgroundImage: item.css }} />\n        </a.div>\n      ))}\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nexport default function useMedia(queries, values, defaultValue) {\n  const match = () => values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue\n  const [value, set] = useState(match)\n  useEffect(() => {\n    const handler = () => set(match)\n    window.addEventListener('resize', handler)\n    return () => window.removeEventListener(handler)\n  }, [])\n  return value\n}\n","import { useRef, useState, useEffect } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport default function useMeasure() {\n  const ref = useRef()\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\n  const [ro] = useState(() => new ResizeObserver(([entry]) => set(entry.contentRect)))\n  useEffect(() => (ro.observe(ref.current), ro.disconnect), [])\n  return [{ ref }, bounds]\n}\n","import React from 'react';\nimport './styles.css';\nimport Ash from './Ash'\nimport EducationSection from './Section'\nimport ProjectSection from './ProjectSection'\nimport Gallery from './gallery'\n\nimport { Grid } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <Grid container justify=\"center\" alignItems=\"flex-start\" direction=\"row\" >\n      <Grid item style={{ paddingBottom:20 }}>\n        <Ash />\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" item style={{backgroundColor: '#cfd8dc'}} xs={12}>\n          <EducationSection/>\n        <ProjectSection/>\n      </Grid>\n      <Grid item>\n        <Gallery/>\n      </Grid>\n    </Grid>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image-1.506fdc0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-2.a1e40a9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-3.02146f1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-4.96cc7a23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-5.815a55f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-6.f2fffb3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-7.2e29ade3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-8.47d2cc09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-9.a16cbb70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-10.72b959d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-11.4e0b236a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-12.01fb2d7d.jpg\";"],"sourceRoot":""}