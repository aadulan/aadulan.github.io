{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["theme","createTheme","typography","fontFamily","join","App","ThemeProvider","className","Card","style","zIndex","borderRadius","margin","CardContent","Grid","justifyContent","alignItems","container","direction","spacing","item","xs","Avatar","sx","width","height","alt","src","Typography","variant","fontWeight","fontStyle","Stack","Button","textTransform","target","rel","href","startIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAeMA,EAAQC,YAAY,CACxBC,WAAY,CACVC,WAAY,CACV,YACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,QAgFIC,MA5Ef,WACE,OACE,cAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,SACE,qBAAKO,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,EAAGC,aAAc,GAAIC,OAAQ,QAApD,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEC,eAAe,SACfC,WAAW,SACXC,WAAS,EACTC,UAAU,MACVC,QAAS,EALX,UAOE,cAACL,EAAA,EAAD,CAAMC,eAAe,SAASC,WAAW,SAASC,WAAS,EAACG,MAAI,EAACC,IAAE,EAAnE,SACE,cAACP,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACE,EAAA,EAAD,CACEC,GAAI,CAAEC,MAAO,QAASC,OAAQ,SAC9BC,IAAI,MACJC,IAAI,6DAIV,eAACb,EAAA,EAAD,CACEC,eAAe,SACfC,WAAW,SACXC,WAAS,EACTC,UAAU,SACVE,MAAI,EACJC,IAAE,EANJ,UAQE,cAACP,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKN,GAAI,CAAEO,WAAY,OAA3C,4BAIF,cAAChB,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACQ,EAAA,EAAD,CACEC,QAAQ,KACRN,GAAI,CAAEO,WAAY,MAAOC,UAAW,UAFtC,iCAOF,cAACjB,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAACY,EAAA,EAAD,CAAOd,UAAU,MAAjB,UACE,cAACe,EAAA,EAAD,CACEV,GAAI,CAAEW,cAAe,QACrBC,OAAO,SACPC,IAAI,WACJC,KAAK,6BACLC,UAAW,cAAC,IAAD,IALb,qBASA,cAACL,EAAA,EAAD,CACEV,GAAI,CAAEW,cAAe,QACrBC,OAAO,SACPC,IAAI,WACJC,KAAK,uCACLC,UAAW,cAAC,IAAD,IALb,2CC5EPC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af23a2ba.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport './App.css';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      'Fira Sans',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Card style={{ zIndex: 1, borderRadius: 15, margin: '10px' }}>\n            <CardContent>\n              <Grid\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                container\n                direction=\"row\"\n                spacing={2}\n              >\n                <Grid justifyContent=\"center\" alignItems=\"center\" container item xs>\n                  <Grid item>\n                    <Avatar\n                      sx={{ width: '15rem', height: '15rem' }}\n                      alt=\"Ash\"\n                      src=\"https://avatars.githubusercontent.com/u/24231419?v=4\"\n                    />\n                  </Grid>\n                </Grid>\n                <Grid\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  container\n                  direction=\"column\"\n                  item\n                  xs\n                >\n                  <Grid item>\n                    <Typography variant=\"h4\" sx={{ fontWeight: '500' }}>\n                      Asmita Dulan\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography\n                      variant=\"h6\"\n                      sx={{ fontWeight: '200', fontStyle: 'italic' }}\n                    >\n                      Software Engineer\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Stack direction=\"row\">\n                      <Button\n                        sx={{ textTransform: 'none' }}\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                        href=\"https://github.com/aadulan\"\n                        startIcon={<GitHubIcon />}\n                      >\n                        aadulan\n                      </Button>\n                      <Button\n                        sx={{ textTransform: 'none' }}\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                        href=\"https://www.linkedin.com/in/aadulan/\"\n                        startIcon={<LinkedInIcon />}\n                      >\n                        aadulan\n                      </Button>\n                    </Stack>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}